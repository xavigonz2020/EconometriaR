library(readr)
datalong <- read_csv("C:/Users/carlosg/Desktop/CURSO-R/01 MODULO BASICO/Sesión 3 B - Archivos y tarea/Sesión 3 B - Archivos y tarea/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 3-EJEMPLO 1.csv")
View(datalong)
View(datalong)
library(readxl)
pob <- read_excel("C:/Users/carlosg/Desktop/CURSO-R/01 MODULO BASICO/Sesión 3 B - Archivos y tarea/Sesión 3 B - Archivos y tarea/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 3-EJEMPLO 2.xlsx")
View(pob)
library(readr)
library(haven)
data <- read_dta("C:/Users/carlosg/Desktop/CURSO-R/01 MODULO BASICO/Sesión 3 B - Archivos y tarea/Sesión 3 B - Archivos y tarea/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 3-EJEMPLO 3.dta")
View(data)
View(datalong)
View(datalong)
View(pob)
View(pob)
View(pob)
View(pob)
View(pob)
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
install.packages("reshape")
View(pob)
library(haven)
auto <- read_dta("C:/Users/carlosg/Desktop/CURSO-R/01 MODULO BASICO/Sesión 3 B - Archivos y tarea/Sesión 3 B - Archivos y tarea/auto.dta")
View(auto)
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
View(auto)
View(auto)
View(auto)
View(auto)
View(auto)
View(auto)
library(reshape)
auto = rename(auto,c(length="longitud"))
source('C:/Users/carlosg/Desktop/CURSO-R/data.R')
getwd()
setwd("C:/Users/carlosg/Desktop/R")
getwd()
library(haven)
DATA_ECONR_BAS_SESION_4_EJEMPLO_1 <- read_dta("SESION 4/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 4-EJEMPLO 1.dta")
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
womenwk$lwage = with(womenwk, log(wage))
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage = with(DATA_ECONR_BAS_SESION_4_EJEMPLO_1, log(wage))
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
label(DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage) = ´Logaritmo del salario por hora´
label(DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage) = 'Logaritmo del salario por hora´
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
library(Hmisc)
library(Hmisc)
library(Hmisc)
library(Hmisc)
label(DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage) = 'Logaritmo del salario por hora´
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
label(DATA_ECONR_BAS_SESION_4_EJEMPLO_1$lwage) = 'Logaritmo del salario por hora'
View(DATA_ECONR_BAS_SESION_4_EJEMPLO_1)
library(haven)
bankloan <- read_dta("SESION 4/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 4-EJEMPLO 2.dta")
View(bankloan)
library(reshape)
bankloan = rename(bankloan, c(impago="deuda"))
bankloan$deudafin[ bankloan$deuda == 1 ] = "SI"
bankloan$deudafin[ bankloan$deuda == 0 ] = "NO"
bankloan$deudafin[ bankloan$deuda == 1 ] = "SI"
bankloan$deudafin[ bankloan$deuda == 0 ] = "NO"
View(bankloan)
library(readxl)
tobit1 <- read_excel("SESION 4/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 4-EJEMPLO 3-1.xlsx")
View(tobit1)
tobit2 <- read_excel("SESION 4/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 4-EJEMPLO 3-2.xlsx")
View(tobit2)
#FUSIONANDO DATOS
totaltobit = rbind(tobit1, tobit2)
View(totaltobit)
library(haven)
invcap <- read_dta("SESION 4/01-ARCHIVOS UTILIZADOS-DATA/DATA-ECONR-BAS-SESION 4-TAREA 1.1.dta")
View(invcap)
library(Hmisc)
label(invcap$capital) = 'inversión en capital'
label(invcap$labor) = 'inversión en mano de obra'
label(invcap$lnoutput) = 'logaritmo de la produccion'
View(invcap)
invcap$prodlin = (invcap, exp(inoutput))
invcap$prodlin = with(invcap, exp(inoutput))
invcap$prodlin = with(invcap, exp(inoutput))
invcap$prodlin = with(invcap, exp(lnoutput))
slices = c(10, 12, 4, 16, 8)
lbls = c("US", "UK", "Australia", "Germany", "France") #Etiquetas
pie(slices, labels=lbls)
library(haven)
auto <- read_dta("SESION 4/auto.dta")
View(auto)
pie(slices, labels=lbls)
auto$extran [auto$foreing ==1] = "Extranjero"
auto$extran [auto$foreing ==0] = "Nacional"
#RECATEGORIZANDO LAS VARIABLES
auto$extran [auto$foreing ==1] = "Extranjero"
View(auto)
#RECATEGORIZANDO LAS VARIABLES
auto$extran [auto$foreign ==1] = "Extranjero"
#RECATEGORIZANDO LAS VARIABLES
auto$extran [auto$foreign ==1] = "Extranjero"
auto$extran [auto$foreign ==0] = "Nacional"
View(auto)
#HACIENDO EL GRAFICO
pie(table(auto$extran))
library(haven)
sumaria_2015 <- read_dta("SESION 5/sumaria-2015.dta")
View(sumaria_2015)
barplot(table(sumaria_2015$dominio))
barplot(table(sumaria_2015$dominio, main = "Gráfico de barras para el dominio"))
barplot(table(sumaria_2015$dominio, main = "Gráfico de barras para el dominio")
barplot(table(sumaria_2015$dominio), main = "Gráfico de barras para el dominio")
barplot(table(sumaria_2015$dominio), main = "Gráfico de barras para el dominio", col = "green")
barplot(table(sumaria_2015$dominio), main = "Gráfico de barras para el dominio", col = "blue")
barplot(table(sumaria_2015$dominio), main = "Gráfico de barras para el dominio", col = "red")
counts = table(sumaria_2015$dominio, sumaria_2015$pobreza)
counts
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend(counts))
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts))
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts), beside = TRUE)
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts), beside = TRUE)
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts))
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts), beside = TRUE)
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts))
barplot(counts, main = "condicion de pobreza de hogares por dominio",
xlab = "numero de hogares", legend = rownames(counts), beside = TRUE)
#CREANDO DIAGRAMAS DE CAJAS
boxplot(sumaria_2015$gashog2d)
boxplot(auto$price - auto$extran, main = "Diagrama de cajas para los precios
\de acuerdo a la procedencia del vehiculo")
boxplot(auto$price - auto$extran, main = "Diagrama de cajas para los precios
\n de acuerdo a la procedencia del vehiculo")
View(sumaria_2015)
View(auto)
boxplot(auto$price ~ auto$extran, main = "Diagrama de cajas para los precios
\n de acuerdo a la procedencia del vehiculo")
hist(auto$price)
hist(auto$price, col = "green")
hist(auto$price, col = "green", xlab = "precio")
hist(auto$price, col = "green", xlab = "precio", main = "Histograma de precio")
hist(auto$price, col = "green", xlab = "precio",
main = "Histograma de precio", prob = TRUE)
hist(auto$price, col = "green", xlab = "precio",
main = "Histograma de precio")
hist(auto$price, col = "green", xlab = "precio",
main = "Histograma de precio", prob = TRUE)
lines(dnorm(auto$price))
m = mean(auto$price)
std = sqrt(var(auto$price))
hist(auto$price, probability = TRUE, col = "RED", main = "Histograma
con curva normal", border = "GREY")
hist(auto$price, probability = TRUE, col = "RED", main = "Histograma
con curva normal", border = "BLACK")
curve(dnorm(x, mean = m, sd = std), col = "DARKBLUE", add = TRUE)
